name: Docker Setup & Update Application (Reusable Workflow)

on:
  workflow_call:
    secrets:
      docker_username:
        required: true
      ec2_host:
        required: true
      ec2_key:
        required: true

jobs:
  connect_update:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create private key file
      run: |
        echo "${{ secrets.ec2_key }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Copy docker-compose.yml to EC2 using SCP
      run: |
        scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml ubuntu@${{ secrets.ec2_host }}:/home/ubuntu/

    - name: SSH into EC2 and Deploy Application
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.ec2_host }}
        username: ubuntu
        key: ${{ secrets.ec2_key }}
        script: |
          # Verificar e instalar Docker si no está presente
          if ! command -v docker &> /dev/null; then
            sudo apt update
            sudo apt install -y docker.io
            sudo apt install docker-compose -y
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo systemctl restart docker
          else
            echo "Docker ya está instalado."
          fi
          
          # Asegurar que Docker esté en ejecución
          if ! sudo systemctl is-active --quiet docker; then
            sudo systemctl start docker
          fi  

          # Navegar al directorio de trabajo
          cd /home/ubuntu

          # Descargar las últimas imágenes
          sudo docker pull ${{ secrets.docker_username }}/app1:latest
          sudo docker pull ${{ secrets.docker_username }}/app2:latest

          # Detener y eliminar contenedores en ejecución
          sudo docker-compose down || true

          # Iniciar los contenedores en modo detach (-d)
          sudo docker-compose up -d

    - name: Cleanup private key file
      run: rm -f private_key.pem
