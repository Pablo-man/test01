name: Docker Setup & update application (Reusable workflow)

on:
  workflow_call:
    secrets:
      docker_username:
        required: true
      ec2_host:
        required: true
      ec2_key:
        required: true

jobs:
  connect_update:
    runs-on: ubuntu-latest
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Copy docker-compose.yml to EC2 using SCP
      run: |
        scp -o StrictHostKeyChecking=no -i ${{ secrets.ec2_key }} docker-compose.yml ubuntu@${{ secrets.ec2_host }}:/home/ubuntu/


    - name: SSH into EC2 and pull the latest Docker image
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.ec2_host }}
        username: ubuntu
        key: ${{ secrets.ec2_key }}
        script: |
          echo "${{ secrets.ec2_key }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml ubuntu@${{ secrets.ec2_host }}:/home/ubuntu/
          rm -f private_key.pem 


          if ! command -v docker &> /dev/null; then
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo systemctl restart docker
          else
            echo "Docker install"
          fi
          
          if ! sudo systemctl is-active --quiet docker; then
            sudo systemctl start docker
          fi  

          cd /home/ubuntu
          sudo docker pull ${{ secrets.docker_username }}/app1:latest
          sudo docker pull ${{ secrets.docker_username }}/app2:latest
          sudo docker stop $(docker ps -q) || true
          sudo docker-compose down
          sudo docker-compose up -d
